select max(DECODE(NVL(get_fromdate(r.risk_id),'0'),'0',' ',format_date(get_fromdate(r.risk_id),'dd/MM/yyyy'))) as "INCEPTION_DATE", 
					 get_client_name(r.risk_id) as "ORIGINAL_INSURED", 
					 get_risk_type_class_name(r.risk_type_class_id) as "CLASS_OF_BUSINESS", 
					 get_umr(r.risk_id) as "NEW_UMR",r.risk_id, 
					 r.umr as "UMR", ppart.programme_id, pt.PARTICIPANT_TYPE_NAME, 
					 c.company_name as "BROKER_COMPANY_NAME", 
					 ud.email_address as "BROKER_EMAIL", 
					 max(DECODE(NVL(nm.message_date,'0'),'0',' ',format_date(nm.message_date,'dd/MM/yyyy'))) as "DATE_OF_LAST_FO", 
					 max(DECODE(NVL(pp1.last_status_change,'0'),'0',' ',format_date(pp1.last_status_change,'dd/MM/yyyy'))) as "DATE_OF_LAST_ACTIVITY" 
					 from programme_participants ppart 
					 inner join personal_project pp on ppart.personal_project_id = pp.personal_project_id 
					 inner join programme p on ppart.programme_id = p.programme_id 
					 inner join broker_risk_project brp on pp.personal_project_id = brp.personal_project_id 
					 inner join risk r on brp.risk_id = r.risk_id 
					 inner join risk_negotiation_project rnp on r.risk_id = rnp.risk_id 
					 inner join negotiation_message nm on rnp.personal_project_id = nm.from_personal_project 
					 inner join personal_project pp1 on (nm.from_personal_project = pp1.personal_project_id OR nm.to_personal_project = pp1.personal_project_id)  
					 inner join users u on pp.project_owner = u.user_id 
					 inner join company c on  u.company_id = c.company_id 
					 left join contract con on r.active_contract = con.contract_id 
					 inner join user_detail ud on u.user_id = ud.user_id  
					 inner join PARTICIPANT_TYPE pt on pt.PARTICIPANT_TYPE_ID = ppart.PARTICIPANT_TYPE_ID 
					 where   nm.message_type in (31) and p.is_ppl is null and con.contract_create_date > '1029349800000'  and r.RISK_ID=:RiskID 
					 group by r.risk_id, pt.PARTICIPANT_TYPE_NAME, ppart.programme_id,get_fromdate(r.risk_id),get_client_name(r.risk_id),get_risk_type_class_name(r.risk_type_class_id),get_umr(r.risk_id),r.umr, 
					 c.company_name,ud.email_address)  a 
					 inner JOIN 
					 (SELECT rnp.SECTION_ID,s.NAME as section_name , s.REFERENCE as Section_Ref,pp.STATUS_ID, r.RISK_ID,u.USERNAME as "UNDERWRITER_EMAIL", c.COMPANY_NAME as "UNDERWRITER_COMPANY" from USERS u 
					 JOIN personal_project pp on pp.project_owner= u.USER_ID 
					 JOIN RISK_NEGOTIATION_PROJECT rnp on rnp.PERSONAL_PROJECT_ID= pp.PERSONAL_PROJECT_ID 
					 JOIN risk r on r.risk_id=rnp.risk_id 
					 join COMPANY c on u.COMPANY_ID=c.COMPANY_ID 
					 join SECTIONS s on s.SECTION_ID=rnp.SECTION_ID 
					 WHERE  rnp.SECTION_ID is not null 
					 AND u.COMPANY_TYPE=2 
					 and pp.STATUS_ID=4 
					 ) b :RiskID  
						 " on a.risk_id =b.risk_id";