<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/22/2017 5:31:55 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DBLOG"
  DTS:CreatorName="AN3PROD\ahussain"
  DTS:DTSID="{35B8A2D2-E349-47FC-B3FC-9D048B2BBA67}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="12.0.5000.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="COBReport"
  DTS:PackageType="5"
  DTS:ProtectionLevel="2"
  DTS:VersionBuild="69"
  DTS:VersionGUID="{90C523D1-CB3B-484F-AB9E-E94BD9E4B32A}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[10.40.13.52\LIVESUPP2C.Placing.dp_user]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{DC3B2703-B867-457A-93F9-F9B866E24A83}"
      DTS:ObjectName="10.40.13.52\LIVESUPP2C.Placing.dp_user">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=10.40.13.52\LIVESUPP2C;User ID=dp_user;Initial Catalog=Placing;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;">
          <EncryptedData
            Type="http://www.w3.org/2001/04/xmlenc#Element"
            Salt="LYOazROi8w=="
            IV="PiFjW1G5oWU=" xmlns="http://www.w3.org/2001/04/xmlenc#">
            <EncryptionMethod
              Algorithm="http://www.w3.org/2001/04/xmlenc#tripledes-cbc" />
            <CipherData>
              <CipherValue>PiFjW1G5oWWvEUDCdn8s85LaQ2NF8hOnuZFmtk2D4tcomwi3D2ykXKTkuQ1ivcfAPqTMWe1C8RdoY5ocUmQXfN4MzVw2fRNp2m3d7gaq6IaQcx9TnX+WU/0NNSxrroFES4w2VLSuBrkSq0vLahau5sDjSZs+wQbz8hHCCbdlQ8UorqyK+dgZPg==</CipherValue>
            </CipherData>
          </EncryptedData>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[COB_Excel]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{7BE68857-01C5-4369-8DAF-9E3C4FD1A8FD}"
      DTS:ObjectName="COB_Excel">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::cob_work]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\install\COBREPORT\report\COB_COUNT.xls;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[error.log]"
      DTS:CreationName="FILE"
      DTS:DTSID="{360407B9-A3EB-4A71-9634-3E6B75BD17AE}"
      DTS:ObjectName="error.log">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="1"
          DTS:ConnectionString="C:\install\COBREPORT\error.log" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{69DA8549-D047-44CF-9FBB-553DCC481B7B}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::cob_work]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\install\COBREPORT\report\COB_COUNT.xls;Extended Properties=&quot;EXCEL 8.0;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[mail2.ebix.com]"
      DTS:CreationName="SMTP"
      DTS:DTSID="{9DF14AA8-C632-414D-B575-3FE14CC1D245}"
      DTS:ObjectName="mail2.ebix.com">
      <DTS:ObjectData>
        <SmtpConnectionManager
          ConnectionString="SmtpServer=mail2.ebix.com;UseWindowsAuthentication=False;EnableSsl=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7A7F1E04-5731-4C0E-BFBD-D5512E9C2353}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;COB_COUNT_REPORT_&quot; + (DT_WSTR,4)DATEPART(&quot;yyyy&quot;,GetDate()) + RIGHT(&quot;0&quot; + (DT_WSTR,2)DATEPART(&quot;mm&quot;,GetDate()) ,2) + RIGHT(&quot;0&quot; + (DT_WSTR,2)DATEPART(&quot;dd&quot;,GetDate()),2) + &quot;.xls&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cob_name">
      <DTS:VariableValue
        DTS:DataType="8">COB_COUNT_REPORT_20180820.xls</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F13F1876-5E2F-491A-8F40-7FC94002B5D4}"
      DTS:Expression="@[User::MasterPath] + &quot;\\template\\COB_COUNT.xls&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cob_source">
      <DTS:VariableValue
        DTS:DataType="8">C:\install\COBREPORT\template\COB_COUNT.xls</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B6B23946-8653-4672-8ABA-732A3A29B05B}"
      DTS:Expression="@[User::MasterPath] + &quot;report\\&quot; +  @[User::cob_name]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cob_target">
      <DTS:VariableValue
        DTS:DataType="8">C:\install\COBREPORT\report\COB_COUNT_REPORT_20171130.xls</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{35E25DC3-9C34-4409-B22B-03EF629FBD97}"
      DTS:Expression="@[User::MasterPath]+&quot;\\report\\COB_COUNT.xls&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cob_work">
      <DTS:VariableValue
        DTS:DataType="8">C:\install\COBREPORT\report\COB_COUNT.xls</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{11D9B0B1-17CB-4F7D-B3EB-D136A8BE1090}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="File_2b_Deleted">
      <DTS:VariableValue
        DTS:DataType="8">e:</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{26649C9B-F615-44E7-B9D8-A14A239AA293}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MasterPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\install\COBREPORT</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B79CCB63-9C68-4829-83CE-7947464A373A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="recipientEmail">
      <DTS:VariableValue
        DTS:DataType="8">tyler.atheis@Ebix.com;pplsupport@ebix.com;globalsql@ebix.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{73A6A466-9B09-45F1-898B-B5B51E35FCA7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="senderemail">
      <DTS:VariableValue
        DTS:DataType="8">swarndeep.singh@ebix.com</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">21,7,OnError,19,OnExecStatusChanged,13,OnInformation,27,OnPipelinePostComponentCall,25,OnPipelinePostEndOfRowset,25,OnPipelinePostPrimeOutput,26,OnPipelinePreComponentCall,24,OnPipelinePreEndOfRowset,24,OnPipelinePrePrimeOutput,18,OnPipelineRowsSent,13,OnPostExecute,14,OnPostValidate,12,OnPreExecute,13,OnPreValidate,10,OnProgress,13,OnQueryCancel,12,OnTaskFailed,22,OnVariableValueChanged,9,OnWarning,10,Diagnostic,12,DiagnosticEx</DTS:Property>
    <DTS:Property
      DTS:EventName="Diagnostic"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="DiagnosticEx"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnExecStatusChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnInformation"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostComponentCall"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostEndOfRowset"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostPrimeOutput"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePreComponentCall"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePreEndOfRowset"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePrePrimeOutput"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelineRowsSent"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPostExecute"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPostValidate"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPreExecute"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPreValidate"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnProgress"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnQueryCancel"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnTaskFailed"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnVariableValueChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnWarning"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\CopyFiles"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{7763fd13-37b3-49cb-8ad5-0ae01e122e4b}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="CopyFiles"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_7f336bf8449244e9b88f21d8f7eb1415"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::cob_name,User::cob_source,User::cob_target,User::cob_work,User::MasterPath,User::recipientEmail,User::senderemail">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ea745f9f351c43a4bba8d4cfa5efcc76")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ea745f9f351c43a4bba8d4cfa5efcc76")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ea745f9f351c43a4bba8d4cfa5efcc76.Properties.Settings.get_Default():ST_ea745f9f351c43a4bba8d4cfa5efcc76.Properties.Sett" +
    "ings")]

namespace ST_ea745f9f351c43a4bba8d4cfa5efcc76.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;

#endregion

namespace ST_ea745f9f351c43a4bba8d4cfa5efcc76
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			// TODO: Add your code here
            copy(Dts.Variables["cob_work"].Value.ToString(), Dts.Variables["cob_target"].Value.ToString());
            //copy(Dts.Variables["uw_work"].Value.ToString(), Dts.Variables["uw_target"].Value.ToString());

            Dts.TaskResult = (int)ScriptResults.Success;
		}


        public void copy(string source, string target)
        {
            try
            {
                // if exists then delete
                if (File.Exists(target))
                {
                    File.Delete(target);
                }
                //otherwise just copy it
                File.Copy(source, target);
            }
            catch (Exception ee)
            {

            }
        }



        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_ea745f9f351c43a4bba8d4cfa5efcc76</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_ea745f9f351c43a4bba8d4cfa5efcc76</msb:DisplayName>
		<msb:ProjectId>{CBF742DD-DECA-4E25-BEF3-A4F2A18FB8D4}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_7f336bf8449244e9b88f21d8f7eb1415.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="ST_7f336bf8449244e9b88f21d8f7eb1415.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{9341571D-C785-48C1-88D8-52AE617D6B30}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_ea745f9f351c43a4bba8d4cfa5efcc76</RootNamespace><AssemblyName>ST_7f336bf8449244e9b88f21d8f7eb1415</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ea745f9f351c43a4bba8d4cfa5efcc76.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ea745f9f351c43a4bba8d4cfa5efcc76.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ea745f9f351c43a4bba8d4cfa5efcc76.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ea745f9f351c43a4bba8d4cfa5efcc76.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ea745f9f351c43a4bba8d4cfa5efcc76.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_7f336bf8449244e9b88f21d8f7eb1415.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADOGFVoAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAA/i4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKguAABTAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAABA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADg
LgAAAAAAAEgAAAACAAUAGCIAAJAMAAABAAAAAAAAAGAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqAAMwBABRAAAAAAAAAAICKBYAAApvFwAACnJzAABwbxgAAApvGQAACm8a
AAAKAigWAAAKbxcAAApyhQAAcG8YAAAKbxkAAApvGgAACigJAAAGAigWAAAKFm8bAAAKKgAAAAsw
AgAbAAAAAAAAAAQoHAAACiwGBCgdAAAKAwQoHgAACt4DJt4AKgABEAAAAAAAABcXAAMfAAABHgIo
HwAACioAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVy
LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
a2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQC
AAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAA
APQDAAAjfgAAYAQAABAGAAAjU3RyaW5ncwAAAABwCgAAnAAAACNVUwAMCwAAEAAAACNHVUlEAAAA
HAsAAHQBAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+iUzABYAAAEAAAAfAAAABQAAAAYAAAAK
AAAAAwAAAB8AAAACAAAADwAAAAEAAAACAAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAAAKAAEA
AAAAAAYAwQC6AAoA3QDIAA4APQEUAQYAWQG6AAYAbwFeAQYAoAGLAQYAagJQAgYAlQKDAgYArAKD
AgYAyQKDAgYA6AKDAgYAAQODAgYAGgODAgYANQODAgYAUAODAgYAaQODAgYAogOCAwYAwgOCAwYA
FwQEBAYANAS6AAYAOQS6AAYAXQSDAgoAiQRzBAoAogRzBAYAtwSCAw4A2QQUAQ4A+wQUARIAVAU0
BRIAbAU0BQYAqgWgBQYAwgW6AAAAAAABAAAAAAABAAEAAAAQADIAPAAFAAEAAQAAARAAawA8AAkA
AwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAARAAQACwARAH8BEwARAKwBFwARAPYBOQAGBiQCTQBW
gCwCUABWgDQCUABQIAAAAACDGLwBGwABAFggAAAAAJMIwgEfAAEAkSAAAAAAkwjWASQAAQCYIAAA
AACTCOIBKQABAKAgAAAAAJYIBgI9AAIAsyAAAAAAhhi8ARsAAgCnIAAAAACRGNIEjwACALwgAAAA
AIYAGgIbAAIAHCEAAAAAhgAfAkcAAgBUIQAAAACGGLwBGwAEAAAAAQA8AgAAAQBCAgAAAgBJAjkA
vAFeAEEAvAFeAEkAvAFeAFEAvAFeAFkAvAFeAGEAvAFeAGkAvAFeAHEAvAFeAHkAvAFeAIEAvAFe
AIkAvAFjAJEAvAEbAJkAvAEbAAkAvAEbAKEASwRoAKEAZgRvACkAvAF0ALkAvAGAAMkAvAEbABEA
vAEbANEAvAEbABkADQWTANkAXgWYAOEAdQWdAOkAfgWjAAkAiAWnANkAkQVjAPEArwWrAPEAtgWw
APEAvQW1ABkAvAEbAAgAFABUAAgAGABZACkAkwCGAC4AGwAsAS4AIwAsAS4AYwBSAS4ACwC7AC4A
EwADAS4AMwADAS4AKwAsAS4AOwAyAS4AQwAsAS4AWwBJAUMAawBZAEkAkwCGAGEAmwBZAIMAqwBZ
AHsAAgABAAMAAwAAAG8BLwAAAO4BNAAAABICQgACAAIAAwACAAMABQABAAQABQACAAUABwAEgAAA
AQAAAIcZ8UAAAAAAAADgAwAABAAAAAAAAAAAAAAAAQCxAAAAAAAEAAAAAAAAAAAAAAABALoAAAAA
AAwAAAAAAAAAAAAAAAoA9QAAAAAADAAAAAAAAAAAAAAACgAVBQAAAAAAAAAAAQAAAMwFAAAFAAQA
AAAAPE1vZHVsZT4AU1RfN2YzMzZiZjg0NDkyNDRlOWI4OGYyMWQ4ZjdlYjE0MTUuZGxsAFJlc291
cmNlcwBTVF9lYTc0NWY5ZjM1MWM0M2E0YmJhOGQ0Y2ZhNWVmY2M3Ni5Qcm9wZXJ0aWVzAFNldHRp
bmdzAFNjcmlwdE1haW4AU1RfZWE3NDVmOWYzNTFjNDNhNGJiYThkNGNmYTVlZmNjNzYAU2NyaXB0
UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVs
QmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5
c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRf
UmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdElu
c3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgBjb3B5AHZhbHVlX18AU3VjY2VzcwBGYWls
dXJlAHZhbHVlAHNvdXJjZQB0YXJnZXQAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRG
cmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0
ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJp
YnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFz
c2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2Vt
Ymx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRp
bWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRp
bWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNUXzdmMzM2YmY4NDQ5MjQ0ZTliODhmMjFkOGY3ZWIx
NDE1AFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5
AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJv
d3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRU
YXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZh
cmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAGdldF9WYWx1ZQBUb1N0cmlu
ZwBzZXRfVGFza1Jlc3VsdABTeXN0ZW0uSU8ARmlsZQBFeGlzdHMARGVsZXRlAENvcHkARXhjZXB0
aW9uAFNUX2VhNzQ1ZjlmMzUxYzQzYTRiYmE4ZDRjZmE1ZWZjYzc2LlByb3BlcnRpZXMuUmVzb3Vy
Y2VzLnJlc291cmNlcwAAAHFTAFQAXwBlAGEANwA0ADUAZgA5AGYAMwA1ADEAYwA0ADMAYQA0AGIA
YgBhADgAZAA0AGMAZgBhADUAZQBmAGMAYwA3ADYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBl
AHMAbwB1AHIAYwBlAHMAABFjAG8AYgBfAHcAbwByAGsAABVjAG8AYgBfAHQAYQByAGcAZQB0AAAA
N0rGrdNQoUSY99ZN8tB6eQAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZ
BQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMBSACAQ4OAgYIAwYRFAQAAAAABAEAAAAEIAEB
DgQgAQEIBgABElERVQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAAAAAAAwAAAQQgABJtBCAA
EnEFIAESdRwDIAAcAyAADgQAAQIOBAABAQ4FAAIBDg5HAQAaLk5FVEZyYW1ld29yayxWZXJzaW9u
PXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU1RfZWE3
NDVmOWYzNTFjNDNhNGJiYThkNGNmYTVlZmNjNzYAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAx
NwAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAAANAuAAAAAAAAAAAA
AO4uAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgLgAAAAAAAAAAAAAAAAAAAABfQ29yRGxsTWFp
bgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQDxQIcZAAABAPFAhxk/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AZQBhADcANAA1AGYAOQBmADMANQAxAGMANAAzAGEANABiAGIAYQA4AGQANABjAGYAYQA1AGUA
ZgBjAGMANwA2AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYANQAz
ADUALgAxADYANgAyADUAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
NwBmADMAMwA2AGIAZgA4ADQANAA5ADIANAA0AGUAOQBiADgAOABmADIAMQBkADgAZgA3AGUAYgAx
ADQAMQA1AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADcAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8ANwBmADMAMwA2AGIAZgA4ADQANAA5ADIANAA0AGUAOQBiADgA
OABmADIAMQBkADgAZgA3AGUAYgAxADQAMQA1AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfAGUAYQA3ADQANQBmADkAZgAzADUAMQBjADQAMwBhADQAYgBiAGEA
OABkADQAYwBmAGEANQBlAGYAYwBjADcANgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANgA1ADMANQAuADEANgA2ADIANQAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA1ADMANQAuADEANgA2ADIANQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAAPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\CopyFilesFromTemplate"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{0528abbe-c701-472d-a20b-8036f3702ef3}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="CopyFilesFromTemplate"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_7d1ca3e7a9ea41889fe13d1424aca419"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::cob_name,User::cob_source,User::cob_target,User::cob_work,User::MasterPath,User::recipientEmail,User::senderemail">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_7d1ca3e7a9ea41889fe13d1424aca419.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{745D870A-60C8-4986-A404-D275120D675A}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_6ec3a8eb43bf438bb3db235dae81c6d6</RootNamespace><AssemblyName>ST_7d1ca3e7a9ea41889fe13d1424aca419</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6ec3a8eb43bf438bb3db235dae81c6d6.Properties.Settings.get_Default():ST_6ec3a8eb43bf438bb3db235dae81c6d6.Properties.Sett" +
    "ings")]

namespace ST_6ec3a8eb43bf438bb3db235dae81c6d6.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_6ec3a8eb43bf438bb3db235dae81c6d6
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			// TODO: Add your code here

            string cobsource = Dts.Variables["cob_source"].Value.ToString();
            //string uwsource = Dts.Variables["uw_source"].Value.ToString();


            string cobtarget = Dts.Variables["cob_work"].Value.ToString();
            //string uwtarget =  Dts.Variables["uw_work"].Value.ToString();

           
            //string uwtarget = Dts.Variables["MasterPath"].Value.ToString() + "report\\" ;
            copy(cobsource, cobtarget);
            //copy(uwsource, uwtarget);


			Dts.TaskResult = (int)ScriptResults.Success;
		}

        public void copy(string source, string target)
        {
            try
            {
                // if exists then delete
                if (File.Exists(target))
                {
                    File.Delete(target);
                }
                //otherwise just copy it
                File.Copy(source, target);
            }
            catch (Exception ee)
            {

            }
        }



        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_6ec3a8eb43bf438bb3db235dae81c6d6</msb:CodeName>
		<msb:DisplayName>ST_6ec3a8eb43bf438bb3db235dae81c6d6</msb:DisplayName>
		<msb:ProjectId>{0AB0A5F7-8988-4825-A13C-A642E716E3B7}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_7d1ca3e7a9ea41889fe13d1424aca419.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_6ec3a8eb43bf438bb3db235dae81c6d6")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_6ec3a8eb43bf438bb3db235dae81c6d6")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6ec3a8eb43bf438bb3db235dae81c6d6.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6ec3a8eb43bf438bb3db235dae81c6d6.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6ec3a8eb43bf438bb3db235dae81c6d6.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_6ec3a8eb43bf438bb3db235dae81c6d6.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_6ec3a8eb43bf438bb3db235dae81c6d6.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_7d1ca3e7a9ea41889fe13d1424aca419.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPh/FVoAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAA/i4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALAuAABLAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAABA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADg
LgAAAAAAAEgAAAACAAUAGCIAAJgMAAABAAAAAAAAAGAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwAwBVAAAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAoKAigWAAAKbxcAAApyiQAAcG8YAAAKbxkAAApvGgAACgsCBgcoCQAABgIoFgAAChZvGwAACioA
AAALMAIAGwAAAAAAAAAEKBwAAAosBgQoHQAACgMEKB4AAAreAybeACoAARAAAAAAAAAXFwADHwAA
AR4CKB8AAAoqtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVy
LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
a2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQC
AAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAA
APgDAAAjfgAAZAQAABAGAAAjU3RyaW5ncwAAAAB0CgAAnAAAACNVUwAQCwAAEAAAACNHVUlEAAAA
IAsAAHgBAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+iUzABYAAAEAAAAfAAAABQAAAAYAAAAK
AAAAAwAAAB8AAAACAAAADwAAAAIAAAACAAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAAAKAAEA
AAAAAAYAwQC6AAoA3QDIAA4APQEUAQYAWQG6AAYAbwFeAQYAoAGLAQYAagJQAgYAlQKDAgYArAKD
AgYAyQKDAgYA6AKDAgYAAQODAgYAGgODAgYANQODAgYAUAODAgYAaQODAgYAogOCAwYAwgOCAwYA
FwQEBAYANAS6AAYAOQS6AAYAXQSDAgoAiQRzBAoAogRzBAYAtwSCAw4A2QQUAQ4A+wQUARIAVAU0
BRIAbAU0BQYAqgWgBQYAwgW6AAAAAAABAAAAAAABAAEAAAAQADIAPAAFAAEAAQAAARAAawA8AAkA
AwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAARAAQACwARAH8BEwARAKwBFwARAPYBOQAGBiQCTQBW
gCwCUABWgDQCUABQIAAAAACDGLwBGwABAFggAAAAAJMIwgEfAAEAkSAAAAAAkwjWASQAAQCYIAAA
AACTCOIBKQABAKAgAAAAAJYIBgI9AAIAsyAAAAAAhhi8ARsAAgCnIAAAAACRGNIEjwACALwgAAAA
AIYAGgIbAAIAICEAAAAAhgAfAkcAAgBYIQAAAACGGLwBGwAEAAAAAQA8AgAAAQBCAgAAAgBJAjkA
vAFeAEEAvAFeAEkAvAFeAFEAvAFeAFkAvAFeAGEAvAFeAGkAvAFeAHEAvAFeAHkAvAFeAIEAvAFe
AIkAvAFjAJEAvAEbAJkAvAEbAAkAvAEbAKEASwRoAKEAZgRvACkAvAF0ALkAvAGAAMkAvAEbABEA
vAEbANEAvAEbABkADQWTANkAXgWYAOEAdQWdAOkAfgWjAAkAiAWnANkAkQVjAPEArwWwAPEAtgW1
APEAvQW6ABkAvAEbAAgAFABUAAgAGABZACkAkwCGAC4AGwAxAS4AIwAxAS4AYwBXAS4ACwDAAC4A
EwAIAS4AMwAIAS4AKwAxAS4AOwA3AS4AQwAxAS4AWwBOAUMAawBZAEkAkwCGAGEAmwBZAIMAqwBZ
AHsAqwACAAEAAwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASA
AAABAAAAhxnUPQAAAAAAAOADAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAA
AAAADAAAAAAAAAAAAAAACgD1AAAAAAAMAAAAAAAAAAAAAAAKABUFAAAAAAAAAAABAAAAzAUAAAUA
BAAAAAAAADxNb2R1bGU+AFNUXzdkMWNhM2U3YTllYTQxODg5ZmUxM2QxNDI0YWNhNDE5LmRsbABS
ZXNvdXJjZXMAU1RfNmVjM2E4ZWI0M2JmNDM4YmIzZGIyMzVkYWU4MWM2ZDYuUHJvcGVydGllcwBT
ZXR0aW5ncwBTY3JpcHRNYWluAFNUXzZlYzNhOGViNDNiZjQzOGJiM2RiMjM1ZGFlODFjNmQ2AFNj
cmlwdFJlc3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBB
cHBsaWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RN
b2RlbEJhc2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1h
bgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IA
Z2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1
bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AY29weQB2YWx1ZV9fAFN1Y2Nlc3MA
RmFpbHVyZQB2YWx1ZQBzb3VyY2UAdGFyZ2V0AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFy
Z2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRy
aWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25B
dHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0
ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBB
c3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5S
dW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBS
dW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTVF83ZDFjYTNlN2E5ZWE0MTg4OWZlMTNkMTQy
NGFjYTQxOQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBU
eXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3Nl
bWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRv
ckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2Ny
aXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNy
b3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGlt
ZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUAVG9T
dHJpbmcAc2V0X1Rhc2tSZXN1bHQAU3lzdGVtLklPAEZpbGUARXhpc3RzAERlbGV0ZQBDb3B5AEV4
Y2VwdGlvbgBTVF82ZWMzYThlYjQzYmY0MzhiYjNkYjIzNWRhZTgxYzZkNi5Qcm9wZXJ0aWVzLlJl
c291cmNlcy5yZXNvdXJjZXMAAABxUwBUAF8ANgBlAGMAMwBhADgAZQBiADQAMwBiAGYANAAzADgA
YgBiADMAZABiADIAMwA1AGQAYQBlADgAMQBjADYAZAA2AC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAVYwBvAGIAXwBzAG8AdQByAGMAZQAAEWMAbwBiAF8AdwBvAHIA
awAAAG2TRsohJPlFjRMENnKwtTYACLd6XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUE
AAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAUgAgEODgIGCAMGERQEAAAAAAQBAAAA
BCABAQ4EIAEBCAYAARJREVUEIAASWQYgAgEOElkEBwESFQUgAQERYQgBAAIAAAAAAAMAAAEEIAAS
bQQgABJxBSABEnUcAyAAHAMgAA4EBwIODgQAAQIOBAABAQ4FAAIBDg5HAQAaLk5FVEZyYW1ld29y
ayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQo
AQAjU1RfNmVjM2E4ZWI0M2JmNDM4YmIzZGIyMzVkYWU4MWM2ZDYAAAUBAAAAABYBABFDb3B5cmln
aHQgQCAgMjAxNwAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAA2C4A
AAAAAAAAAAAA7i4AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAuAAAAAAAAAABfQ29yRGxsTWFp
bgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQDUPYcZAAABANQ9hxk/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8ANgBlAGMAMwBhADgAZQBiADQAMwBiAGYANAAzADgAYgBiADMAZABiADIAMwA1AGQAYQBlADgA
MQBjADYAZAA2AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYANQAz
ADUALgAxADUAOAAyADgAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
NwBkADEAYwBhADMAZQA3AGEAOQBlAGEANAAxADgAOAA5AGYAZQAxADMAZAAxADQAMgA0AGEAYwBh
ADQAMQA5AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADcAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8ANwBkADEAYwBhADMAZQA3AGEAOQBlAGEANAAxADgAOAA5AGYA
ZQAxADMAZAAxADQAMgA0AGEAYwBhADQAMQA5AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfADYAZQBjADMAYQA4AGUAYgA0ADMAYgBmADQAMwA4AGIAYgAzAGQA
YgAyADMANQBkAGEAZQA4ADEAYwA2AGQANgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANgA1ADMANQAuADEANQA4ADIAOAAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA1ADMANQAuADEANQA4ADIAOAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAAPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\DeleteFiles"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:Disabled="True"
      DTS:DTSID="{edfc26a7-2a7e-4f02-9ba3-8cec2c06aa33}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="DeleteFiles"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_055ae60e8b4343b9942383a1fc24f6c8"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::cob_name,User::cob_source,User::cob_target,User::cob_work,User::MasterPath,User::recipientEmail,User::senderemail">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ea46613b6f274a9480b353b82b381580")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ea46613b6f274a9480b353b82b381580")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_ea46613b6f274a9480b353b82b381580
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			// TODO: Add your code here
            //try
            //{
                File.Delete(Dts.Variables["cob_target"].Value.ToString());
                //File.Delete(Dts.Variables["cob_work"].Value.ToString());
                
            //}
            //catch
            //{

            //}

			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_055ae60e8b4343b9942383a1fc24f6c8.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{66397331-B75B-4CF8-A948-BAB0E8735D45}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_ea46613b6f274a9480b353b82b381580</RootNamespace><AssemblyName>ST_055ae60e8b4343b9942383a1fc24f6c8</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_ea46613b6f274a9480b353b82b381580</msb:CodeName>
		<msb:DisplayName>ST_ea46613b6f274a9480b353b82b381580</msb:DisplayName>
		<msb:ProjectId>{259FC2B6-8951-44BF-9459-E154D3114C18}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_055ae60e8b4343b9942383a1fc24f6c8.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ea46613b6f274a9480b353b82b381580.Properties.Settings.get_Default():ST_ea46613b6f274a9480b353b82b381580.Properties.Sett" +
    "ings")]

namespace ST_ea46613b6f274a9480b353b82b381580.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ea46613b6f274a9480b353b82b381580.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ea46613b6f274a9480b353b82b381580.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ea46613b6f274a9480b353b82b381580.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ea46613b6f274a9480b353b82b381580.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ea46613b6f274a9480b353b82b381580.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_055ae60e8b4343b9942383a1fc24f6c8.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIyBHVoAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAAHi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMgtAABTAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
LgAAAAAAAEgAAAACAAUAsCEAABgMAAABAAAAAAAAAPggAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqxgIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoAAAooGwAACgIoFgAA
ChZvHAAACioeAigdAAAKKgAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNv
dXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQ
dWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJl
c291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMx
OQAAAAAFAGwAAADIAwAAI34AADQEAADoBQAAI1N0cmluZ3MAAAAAHAoAAIwAAAAjVVMAqAoAABAA
AAAjR1VJRAAAALgKAABgAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAAHgAA
AAUAAAAGAAAACQAAAAEAAAAdAAAAAgAAAA8AAAABAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAA
AQAAAAAACgABAAAAAAAGAMEAugAKAN0AyAAOAD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAFcCPQIG
AIICcAIGAJkCcAIGALYCcAIGANUCcAIGAO4CcAIGAAcDcAIGACIDcAIGAD0DcAIGAFYDcAIGAI8D
bwMGAK8DbwMGAAQE8QMGACEEugAGACYEugAGAEoEcAIKAHYEYAQKAI8EYAQGAKQEbwMOAMYEFAEO
AOgEFAESAEEFIQUSAFkFIQUGAIgFfgUAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQAGsA
PAAJAAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAAoAEQB/ARMAEQCsARcAEQD2ATkABgYf
AkcAVoAnAkoAVoAvAkoAUCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI1gEkAAEA
mCAAAAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRi/BIkAAgC7
IAAAAACGABoCGwACAO0gAAAAAIYYvAEbAAIAAAABADcCOQC8AVgAQQC8AVgASQC8AVgAUQC8AVgA
WQC8AVgAYQC8AVgAaQC8AVgAcQC8AVgAeQC8AVgAgQC8AVgAiQC8AV0AkQC8ARsAmQC8ARsACQC8
ARsAoQA4BGIAoQBTBGkAKQC8AW4AuQC8AXoAyQC8ARsAEQC8ARsA0QC8ARsAGQD6BI0A2QBLBZIA
4QBiBZcA6QBrBZ0ACQB1BaEA8QCNBaUA2QCUBV0AGQC8ARsACAAUAE4ACAAYAFMAKQCTAIAALgAb
ABsBLgAjABsBLgBjAEEBLgALAKoALgATAPIALgAzAPIALgArABsBLgA7ACEBLgBDABsBLgBbADgB
QwBrAFMASQCTAIAAYQCbAFMAgwCrAFMAdQACAAEAAwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgAD
AAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAAjRkeSgAAAAAAAM0DAAAEAAAAAAAAAAAAAAABALEA
AAAAAAQAAAAAAAAAAAAAAAEAugAAAAAADAAAAAAAAAAAAAAACgD1AAAAAAAMAAAAAAAAAAAAAAAK
AAIFAAAAAAAAAAABAAAAowUAAAUABAAAAAA8TW9kdWxlPgBTVF8wNTVhZTYwZThiNDM0M2I5OTQy
MzgzYTFmYzI0ZjZjOC5kbGwAUmVzb3VyY2VzAFNUX2VhNDY2MTNiNmYyNzRhOTQ4MGIzNTNiODJi
MzgxNTgwLlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBTVF9lYTQ2NjEzYjZmMjc0YTk0
ODBiMzUzYjgyYjM4MTU4MABTY3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lz
dGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNl
cnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sA
VlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJj
ZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVz
b3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABNYWluAHZh
bHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFy
Z2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRy
aWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25B
dHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0
ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBB
c3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5S
dW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBS
dW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTVF8wNTVhZTYwZThiNDM0M2I5OTQyMzgzYTFm
YzI0ZjZjOABTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBU
eXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3Nl
bWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRv
ckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2Ny
aXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNy
b3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGlt
ZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUAVG9T
dHJpbmcAU3lzdGVtLklPAEZpbGUARGVsZXRlAHNldF9UYXNrUmVzdWx0AFNUX2VhNDY2MTNiNmYy
NzRhOTQ4MGIzNTNiODJiMzgxNTgwLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAABx
UwBUAF8AZQBhADQANgA2ADEAMwBiADYAZgAyADcANABhADkANAA4ADAAYgAzADUAMwBiADgAMgBi
ADMAOAAxADUAOAAwAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAV
YwBvAGIAXwB0AGEAcgBnAGUAdAAAAAAAMmDHJzElFkWNaC4HuHD2aQAIt3pcVhk04IkIiYRdzYCA
zJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMAgYI
AwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElERVQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEA
AgAAAAAAAwAAAQQgABJtBCAAEnEFIAESdRwDIAAcAyAADgQAAQEORwEAGi5ORVRGcmFtZXdvcmss
VmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEA
I1NUX2VhNDY2MTNiNmYyNzRhOTQ4MGIzNTNiODJiMzgxNTgwAAAFAQAAAAAWAQARQ29weXJpZ2h0
IEAgIDIwMTcAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwHwLQAAAAAA
AAAAAAAOLgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC4AAAAAAAAAAAAAAAAAAAAAX0NvckRs
bE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQAeSo0ZAAABAB5KjRk/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AZQBhADQANgA2ADEAMwBiADYAZgAyADcANABhADkANAA4ADAAYgAzADUAMwBiADgAMgBiADMA
OAAxADUAOAAwAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYANQA0
ADEALgAxADgAOQA3ADQAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
MAA1ADUAYQBlADYAMABlADgAYgA0ADMANAAzAGIAOQA5ADQAMgAzADgAMwBhADEAZgBjADIANABm
ADYAYwA4AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADcAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8AMAA1ADUAYQBlADYAMABlADgAYgA0ADMANAAzAGIAOQA5ADQA
MgAzADgAMwBhADEAZgBjADIANABmADYAYwA4AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfAGUAYQA0ADYANgAxADMAYgA2AGYAMgA3ADQAYQA5ADQAOAAwAGIA
MwA1ADMAYgA4ADIAYgAzADgAMQA1ADgAMAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANgA1ADQAMQAuADEAOAA5ADcANAAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA1ADQAMQAuADEAOAA5ADcANAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAgPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{103C8EE9-CCAB-4488-9674-6A6A8E2456ED}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{FB39DCCE-EF7C-499D-9162-4AD163EA95AD}"
        DTS:ObjectName="{FB39DCCE-EF7C-499D-9162-4AD163EA95AD}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[User::MasterPath]+"\\report"</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\install\COBREPORT\report" />
            <FEFEProperty
              FileSpec="COB_COUNT_REPORT*.*" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\File System Task"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:Description="File System Task"
          DTS:DTSID="{D1F8B432-10A2-4629-97F5-E2CF592FBC69}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="File System Task"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="DeleteFile"
              TaskSourcePath="User::File_2b_Deleted"
              TaskIsSourceVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{FD1BEACD-6B87-417D-AE3B-E90CF26D145D}"
          DTS:ObjectName="{FD1BEACD-6B87-417D-AE3B-E90CF26D145D}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::File_2b_Deleted" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Generate Reports"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{1f22c668-aa14-42b5-9dcf-a4e2f1ddbe8e}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Generate Reports">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Generate Reports\COB_Report"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{bedec80f-3f22-477d-b42a-6b644668b6c2}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="COB_Report"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Generate Reports\COB_Report\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Generate Reports\COB_Report\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Generate Reports\COB_Report\Data Conversion.Inputs[Data Conversion Input].Columns[Class Of Business]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Class Of Business"
                          lineageId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Output].Columns[Class Of Business]" />
                        <inputColumn
                          refId="Package\Generate Reports\COB_Report\Data Conversion.Inputs[Data Conversion Input].Columns[PPL_REPORTING_CLASS]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="PPL_REPORTING_CLASS"
                          lineageId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Output].Columns[PPL_REPORTING_CLASS]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Generate Reports\COB_Report\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Generate Reports\COB_Report\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Generate Reports\COB_Report\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Class Of Business]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Generate Reports\COB_Report\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Class Of Business]"
                          name="Copy of Class Of Business"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Output].Columns[Class Of Business]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate Reports\COB_Report\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of PPL_REPORTING_CLASS]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Generate Reports\COB_Report\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of PPL_REPORTING_CLASS]"
                          name="Copy of PPL_REPORTING_CLASS"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Output].Columns[PPL_REPORTING_CLASS]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Generate Reports\COB_Report\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Generate Reports\COB_Report\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Generate Reports\COB_Report\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Generate Reports\COB_Report\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Generate Reports\COB_Report\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Generate Reports\COB_Report\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Generate Reports\COB_Report\Excel Destination"
                  componentClassID="Microsoft.ExcelDestination"
                  contactInfo="Excel Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Excel Destination"
                  name="Excel Destination"
                  usesDispositions="true">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">COBCount</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Generate Reports\COB_Report\Excel Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Generate Reports\COB_Report\Excel Destination.Inputs[Excel Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Excel Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Generate Reports\COB_Report\Excel Destination.Inputs[Excel Destination Input].Columns[TotalCount]"
                          cachedDataType="i4"
                          cachedName="TotalCount"
                          externalMetadataColumnId="Package\Generate Reports\COB_Report\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[TotalCount]"
                          lineageId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Output].Columns[TotalCount]" />
                        <inputColumn
                          refId="Package\Generate Reports\COB_Report\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of Class Of Business]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy of Class Of Business"
                          externalMetadataColumnId="Package\Generate Reports\COB_Report\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[ClassOfBusiness]"
                          lineageId="Package\Generate Reports\COB_Report\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Class Of Business]" />
                        <inputColumn
                          refId="Package\Generate Reports\COB_Report\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of PPL_REPORTING_CLASS]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="Copy of PPL_REPORTING_CLASS"
                          externalMetadataColumnId="Package\Generate Reports\COB_Report\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[PPL_Reporting_Class]"
                          lineageId="Package\Generate Reports\COB_Report\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of PPL_REPORTING_CLASS]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Generate Reports\COB_Report\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[TotalCount]"
                          dataType="wstr"
                          length="255"
                          name="TotalCount" />
                        <externalMetadataColumn
                          refId="Package\Generate Reports\COB_Report\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[ClassOfBusiness]"
                          dataType="wstr"
                          length="255"
                          name="ClassOfBusiness" />
                        <externalMetadataColumn
                          refId="Package\Generate Reports\COB_Report\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[PPL_Reporting_Class]"
                          dataType="wstr"
                          length="255"
                          name="PPL_Reporting_Class" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Generate Reports\COB_Report\Excel Destination.Outputs[Excel Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Excel Destination Error Output"
                      synchronousInputId="Package\Generate Reports\COB_Report\Excel Destination.Inputs[Excel Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Generate Reports\COB_Report\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Generate Reports\COB_Report\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Generate Reports\COB_Report\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Generate Reports\COB_Report\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Generate Reports\COB_Report\OLE DB Source"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">DECLARE @PullDate  DATETIME = GETDATE()-1; 
 
declare @COBList table
(LongCode varchar(100),
JVCode varchar(100),
Description varchar(100),
PPL_REPORTING_CLASS varchar(100))

Insert into  @COBList
(LongCode,JVCode,Description,PPL_REPORTING_CLASS)
Values
('casualty','529','Casualty','CASUALTY'),
('general_casualty_or_liability',	'550'	,'Casualty / Liability - Liability','CASUALTY'),
('product_contamination_liability','551','Casualty / Liability - Product Contamination','CASUALTY'),
('commercial_liability','105'	,'Commercial liability','CASUALTY'),
('commercial_multiple_peril_casualty','020','Commercial multiple peril (casualty)','CASUALTY'),
('employers_liability','	112',	'Employer''s liability','CASUALTY'),
('excess_liability'	,'528'	,'Excess liability'	,'CASUALTY'),
('extended_warranty',	'036'	,'Extended warranty',	'CASUALTY'),
('film_producers_indemnity_all_risks_cast',	'122',	'Film producers indemnity - all risks cast','CASUALTY'),
('liquidated_damages'	,'554',	'Financial - Liquidated Damages',	'CASUALTY'),
('general_liability',	'126',	'General liability',	'CASUALTY'),
('legal_expenses',	'127'	,'Legal expenses',	'CASUALTY'),
('liability_unspecified',	'129',	'Liability unspecified',	'CASUALTY'),
('nonmarine_general_and_miscellaneous_liability',	'146',	'Non-marine general and miscellaneous liability',	'CASUALTY'),
('other_liability_umbrella_all_others',	'163',	'Other liability, umbrella all others'	,'CASUALTY'),
('product_guarantee_recall',	'174'	,'Product guarantee - recall',	'CASUALTY'),
('workers_compensation_specific',	'197',	'Workers'' compensation - specific',	'CASUALTY'),
 ('workers_compensation_and_employers_liability',	'198',	'Workers'' compensation and employers'' liability'	,'CASUALTY'),
('workers_compensation_unspecified',	'201',	'Workers'' compensation unspecified',	'CASUALTY'),
('agricultural_crop_and_forestry',	'001',	'Agricultural crop and forestry',	'PROPERTY'),
('all_risk_physical_or_loss_damage',	'573',	'All Risk Loss or Physical Damage','PROPERTY'),
('all_risks_of_physical_loss_or_damage_other_than_direct_prop_reins'	,'002',	'All risks of physical loss or damage other than direct prop. reins.',	'PROPERTY'),
('commercial_multiple_peril',	'019',	'Commercial multiple peril',	'PROPERTY'),
('commercial_multiple_peril_property',	'021',	'Commercial multiple peril (property)',	'PROPERTY'),
('commercial_multiple_peril_unspecified',	'024',	'Commercial multiple peril unspecified',	'PROPERTY'),
('commercial_or_industrial_all_risks_loss_of_profits'	,'027',	'Commercial/industrial all risks - loss of profits',	'PROPERTY'),
('combined_property_damage_and_bodily_injury',	'615',	'Defines a standard combined property and liability class of business.',	'PROPERTY'),
('difference_in_conditions',	'029',	'Difference in conditions',	'PROPERTY'),
('earthquake',	'030',	'Earthquake',	'PROPERTY'),
('farmowners_multiple_peril',	'116',	'Farmowners multiple peril',	'PROPERTY'),
('fire'	,'203',	'Fire',	'PROPERTY'),
('fire_combined_unspecified'	,'207'	,'Fire - combined - unspecified',	'PROPERTY'),
('fire_unspecified','237','Fire - unspecified',	'PROPERTY'),
('fire_and_perils',	'230',	'Fire and perils',	'PROPERTY'),
('flood_unspecified',	'041',	'Flood unspecified',	'PROPERTY'),
('homeowners_multiple_peril_unspecified',	'054',	'Homeowners multiple peril unspecified',	'PROPERTY'),
('household_or_homeowner_multiple_peril',	'055',	'Household / Homeowner multiple peril','PROPERTY'),
('low_voltage_computers_electronics',	'491',	'Low voltage - computers - electronics','PROPERTY'),
('natural_catastrophes',	'062',	'Natural catastrophes',	'PROPERTY'),
('property_household',	'558',	'Property - Householders Comprehensive'	,'PROPERTY'),
('property_unspecified',	'069',	'Property - unspecified',	'PROPERTY'),
('property_unspecified_full_value',	'581',	'Property full value',	'PROPERTY'),
('property_multinational',	'070',	'Property multinational','PROPERTY'),
--,('property_terrorism',	'546',	'Property terrorism',	'PROPERTY') removing as per Alfie mail
('marine_hull',	'298',	'Marine hull','MARINE'),
('marine_increased_value',	'620',	'Marine Increased Value','MARINE'),
('marine_liability_unspecified',	'556',	'Marine - Liability','MARINE'),
('marine_mortgagees_interest_and_additional_perils',	'621',	'Marine Mortgagees Interest And Additional Perils','MARINE'),
('marine_unspecified',	'515',	'Marine unspecified','MARINE'),
('marine_war',	'293',	'Marine - war','MARINE'),
('specie_and_valuables_commercial',	'074',	'Specie and valuables - commercial','MARINE')

,('armoured_carriers_and_cash_in_transit',	'009',	'Armoured carriers and cash in transit','MARINE'),
('cargo_unspecified',	'549',	'Cargo','MARINE'),
('fine_art',	'037',	'Fine Art','MARINE'),
('general_specie_including_vault_risks',	'044',	'General specie including vault risks','MARINE'),
('jewellers_block',	'057',	'Jeweller''s block','MARINE')

----Newly added COB for mail dated 05/mar/2018
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('energy_onshore','032','Energy, onshore','ENERGY')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('energy_or_oil_and_gas_on_shore_including_rigs','033','Energy/oil and gas - on shore - including rigs','ENERGY')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('energy_or_oil_and_gas_unspecified','034','Energy/oil and gas - unspecified','ENERGY')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('nuclear_property','063','Nuclear - property','ENERGY')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('energy_liability_onshore','113','Energy liability, onshore','ENERGY')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('nuclear_liability','147','Nuclear - liability','ENERGY')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('energy_operators_extra_expenses_and_control_of_well','275','Energy operators extra expenses and control of well','ENERGY')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('energy_liability_offshore','276','Energy liability, offshore','ENERGY')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('energy_offshore_property','277','Energy, offshore, property','ENERGY')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('energy_or_oil_and_gas_off_shore_including_rigs','278','Energy/oil and gas - off shore - including rigs','ENERGY')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('marine_offshore_or_rigs','309','Marine offshore / rigs','ENERGY')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('nuclear_personal_accident','408','Nuclear - personal accident','ENERGY')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('nuclear','531','Nuclear','ENERGY')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('offshore','532','Offshore','ENERGY')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('energy_liability_unspecified','561','Energy Liability Unspecified','ENERGY')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('energy_operational_power_generation_transmission_and_utilities','569','Energy Operational Power Generation','ENERGY')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('energy_construction_offshore_property','592','Energy construction offshore property','ENERGY')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('energy_search_offshore_property','593','Energy search offshore property','ENERGY')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('lm_energy_search_offshore_property_GOM_wind_excl_WRO_excl_construct','599','Energy search offshore property GOM wind excluding WRO excluding cons','ENERGY')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('lm_energy_search_offshore_property_excl_GOM_wind_and_WRO','600','Energy search offshore property excluding GOM wind and WRO','ENERGY')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('lm_energy_operators_extra_expenses_and_control_of_well_GOM_wind','601','Energy operators extra expenses and control of well GOM wind','ENERGY')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('lm_energy_operators_extra_expenses_and_control_of_well_excl_GOM_wind','602','Energy operators extra expenses and control of well excluding GOM wind','ENERGY')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('energy_unspecified','603','Energy Unspecified','ENERGY')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('film_including_film_completion_bonds','568','Film inc Film Completion Bonds','ENERGY')  
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('boiler_loss_of_profits','088','Boiler - loss of profits','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('boiler_and_machinery','089','Boiler and machinery','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('boiler_and_machinery_contractors_all_risk','090','Boiler and machinery contractors all risk','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('boiler_and_machinery_engineering_general','091','Boiler and machinery engineering - general','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('boiler_and_machinery_erection_all_risk','092','Boiler and machinery erection all risk','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('boiler_and_machinery_machinery_breakdown','093','Boiler and machinery machinery breakdown','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('boiler_and_machinery_unspecified','094','Boiler and machinery unspecified','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('boiler_explosion','095','Boiler explosion','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('machinery_loss_of_profits','096','Machinery - loss of profits','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('machinery_breakdown','097','Machinery breakdown','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('machinery_guarantee','098','Machinery guarantee','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('special_machinery_covers','099','Special machinery covers','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('car_loss_of_profits','472','CAR - loss of profits','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('car_or_ear_and_decennial','473','CAR / EAR and decennial','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('car_or_ear_combined','474','CAR / EAR combined','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('car_or_ear_special_insurance','475','CAR / EAR special insurance','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('combined_car_and_ear','476','Combined CAR / EAR','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('contractors_plant_loss_of_profits','477','Contractors plant - loss of profits','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('contractors_all_risks','478','Contractors'' all risks','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('deterioration_of_stock_loss_of_profits','479','Deterioration of stock - loss of profits','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('ear_loss_of_profits','480','EAR - loss of profits','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('engineering_completed_risks','481','Engineering - completed risks','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('engineering_completed_works_insurance','482','Engineering - completed works insurance','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('engineering_earthquake','483','Engineering - earthquake','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('engineering_leasing','484','Engineering - leasing','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('engineering_special_industrial_all_risk_coverage','485','Engineering - special industrial all risk coverage','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('engineering_unspecified','486','Engineering - unspecified','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('engineering_incl_boiler_and_machinery_contractors_ar_and_engineering','487','Engineering incl boiler and machinery, contractors AR and engineering','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('engineering_insurance_contractors_plant','488','Engineering insurance contractors'' plant','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('machinery_and_car_or_ear','493','Machinery and CAR / EAR','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('various_machinery','494','Various machinery','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('construction_unspecified','552','Construction','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('construction_pollution_liability','616','Construction Pollution Liability','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('construction_wrap_up','617','Construction Wrap Up','CONSTRUCTION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('erection_all_risks','489','Erection all risks','CONSTRUCTION') 
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('industrial_riot','056','Industrial riot','POLITICAL RISKS')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('political_risks_unspecified','065','Political risks - unspecified','POLITICAL RISKS')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('private_riot','067','Private riot','POLITICAL RISKS')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('private_theft','068','Private theft','POLITICAL RISKS')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('terrorism_pool_re','077','Terrorism - Pool Re','POLITICAL RISKS')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('war_unspecified','559','War and Political - War','POLITICAL RISKS')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('kidnap_and_ransom','407','Kidnap and ransom','K &amp; R')
 
----Newly added COB for mail dated 06/apr/2018
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('general_accident','043','General accident','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('accident_unspecified','100','Accident - unspecified','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('accident_liability_and_motor_multilines_accident_predominating','101','Accident, liability and motor multilines - accident predominating','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('accident_liability_and_motor_multilines_liability_predominating','102','Accident, liability and motor multilines - liability predominating','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('accident_liability_and_motor_multilines_motor_predominating','103','Accident, liability and motor multilines - motor predominating','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('accident_liability_motor_and_other_multilines','104','Accident, liability, motor and other multilines','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('film_producers_indemnity_all_risks_cast_or_negative','123','Film producers indemnity - all risks cast/negative','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('film_producers_indemnity_all_risks_negative','124','Film producers indemnity - all risks negative','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('credit_accident_and_health','386','Credit accident and health','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('credit_accident_and_health_group','387','Credit accident and health group','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('credit_accident_and_health_individual','388','Credit accident and health individual','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('credit_accident_and_health_unspecified','389','Credit accident and health unspecified','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('group_accident_and_health','390','Group accident and health','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('group_accident_and_health_personal_accident','391','Group accident and health - personal accident','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('group_accident_and_health_personal_sickness','392','Group accident and health - personal sickness','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('group_accident_and_health_air_travel','393','Group accident and health air travel','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('group_accident_and_health_unspecified','394','Group accident and health unspecified','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('individual_accident_and_health_personal_accident','395','Individual accident and health - personal accident','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('individual_accident_and_health_personal_air_travel','396','Individual accident and health - personal, air travel','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('individual_accident_and_health_personal_all_other','397','Individual accident and health - personal, all other','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('individual_accident_and_health_personal_collectively_renewable','398','Individual accident and health - personal, collectively renewable','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('individual_accident_and_health_personal_guaranteed_renewable','399','Individual accident and health - personal, guaranteed renewable','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('individual_accident_and_health_personal_non_cancellable','400','Individual accident and health - personal (non cancellable)','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('individual_accident_and_health_personal_non_renewable_for_stated_re','401','Individual accident and health - personal, non renewable for stated re','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('individual_accident_and_health_personal_other_accident','402','Individual accident and health - personal, other accident','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('individual_accident_and_health_personal_other_health','403','Individual accident and health - personal, other health','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('individual_accident_and_health_personal_unspecified','404','Individual accident and health - personal, unspecified','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('individual_and_group_sickness_unspecified','405','Individual and group sickness - unspecified','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('individual_sickness','406','Individual sickness','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('personal_accident_group_travel_accident','409','Personal accident - group travel accident','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('personal_accident_individual_and_group_unspecified','410','Personal accident - individual and group - unspecifiedd','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('personal_accident_individual_travel_accident','411','Personal accident - individual travel accident','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('personal_accident_motor_unspecified','412','Personal accident - motor - unspecified','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('personal_accident_motor_driver','413','Personal accident - motor driver','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('personal_accident_motor_passengers','414','Personal accident - motor passengers','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('personal_accident_supplementary','415','Personal accident - supplementary','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('personal_accident_travel_accident_unspecified','416','Personal accident - travel accident - unspecified','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('personal_accident_unspecified','417','Personal accident - unspecified','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('personal_accident_and_health_individual','418','Personal accident and health individual','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('personal_accident_with_premium_refund','419','Personal accident with premium refund','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('sickness_medical_expenses','420','Sickness - medical expenses','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('sickness_unspecified','421','Sickness - unspecified','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('sickness_loss_of_income_long_term','422','Sickness loss of income - long term','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('sickness_loss_of_income_short_term','423','Sickness loss of income - short term','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('temporary_life_and_permanent_health','424','Temporary life and permanent health','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('storage_liability','506','Storage liability','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('personal_accident_including_passive_war','523','Personal accident - including passive war','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('personal_accident_including_war','524','Personal accident - including war','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('personal_accident_war','527','Personal accident - war','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('contingency_liability','540','Contingency liability','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('life','541','Life','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('life_pensions','542','Life pensions','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('life_other','543','Life other','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('personal_accident_individual_and_group_inc_kidnap_and_ransom','577','PA individual and Group including KandR','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('personal_accident_individual_and_group_inc_sports_disability_excl_acc','578','PA individual and Group including sports disability excluding accidental','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('film_producers_indemnity','629','Film Producers Indemnity','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('accident_and_health','632','Accident and Health','A &amp; H')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('bloodstock','012','Bloodstock','B &amp; L STOCK')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('fishfarm','038','Fishfarm','B &amp; L STOCK')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('livestock','058','Livestock','B &amp; L STOCK')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('bankers_blanket_bonds','011','Bankers blanket bonds','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('directors_and_officers_liability','109','Directors and officers liability','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('errors_and_omissions_or_professional_indemnity','115','Errors and omissions/professional indemnity','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('medical_malpractice','130','Medical malpractice','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('medical_malpractice_hospitals','133','Medical malpractice hospitals','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('medical_malpractice_nursing_homes','135','Medical malpractice nursing homes','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('medical_malpractice_unspecified','144','Medical malpractice unspecified','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('other_liability_directors_and_officers_financial_institutions','152','Other liability, directors and officers, financial institutions','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('other_liability_directors_and_officers_and_nonfinancial_institutions','153','Other liability, directors and officers and non-financial institutions','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('other_liability_errors_and_omissions_accountants','155','Other liability, errors and omissions, accountants','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('other_liability_errors_and_omissions_architects_and_engineers','156','Other liability, errors and omissions, architects and engineers','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('other_liability_errors_and_omissions_insurance_agent','157','Other liability, errors and omissions, insurance agent','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('other_liability_errors_and_omissions_lawyers','158','Other liability, errors and omissions, lawyers','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('other_liability_errors_and_omissions_miscellaneous','159','Other liability, errors and omissions, miscellaneous','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('other_liability_umbrella_directors_and_officers','165','Other liability, umbrella directors and officers','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('other_liability_umbrella_errors_and_omissions','167','Other liability, umbrella errors and omissions','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('professional_liability_doctors_and_hospitals','183','Professional liability - doctors and hospitals','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('fidelity','444','Fidelity','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('fidelity_commercial','445','Fidelity commercial','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('fidelity_financial_institutions','446','Fidelity financial institutions','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('fidelity_umbrella_commercial','452','Fidelity umbrella commercial','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('fidelity_umbrella_financial_institutions','453','Fidelity umbrella financial institutions','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('fidelity_computer_crime_and_bankers_policies_burglary_robbery_theft_forgery','455','Fidelity computer crime and bankers policies(and burglary,robbery,theft,forgery)','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('financial_guarantee','456','Financial guarantee','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('surety_or_financial_guarantee','465','Surety / financial guarantee','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('mortgage_guarantee','534','Mortgage Guarantee','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('financial','539','Financial','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('intellectual_property','553','Financial - Intellectual Property','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('other_liability_errors_and_omissions_financial_institutions','564','Other liability, errors and omissions, financial institutions','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('employment_practice_liability','618','Employment Practice Liability','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('financial_services_loss_of_licence','619','Financial Services Loss Of Licence','FINPRO')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('property_terrorism','546','Property terrorism','TERRORISM')

----Newly added COB for mail dated 14/jun/2018
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation','332','Aviation','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_liability_excluding_war','333','Aviation liability - excluding war','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_liability_including_war_passenger','334','Aviation liability - including war - passenger','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_liability_including_war_products','335','Aviation liability - including war - products','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_liability_including_war_third_party','336','Aviation liability - including war - third party','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_liability_unspecified','337','Aviation liability - unspecified','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_liability_war_only','338','Aviation liability - war only','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_personal_accident_excluding_war','339','Aviation - personal accident excluding war','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_personal_accident_including_war','340','Aviation - personal accident including war','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_personal_accident_loss_of_license','341','Aviation - personal accident loss of license','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_personal_accident_war_only','342','Aviation - personal accident war only','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_all_classes_excluding_war','343','Aviation all classes - excluding war','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_all_classes_including_war','344','Aviation all classes - including war','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_all_classes_war_only','345','Aviation all classes - war only','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_all_classes_airline_business_excluding_war','346','Aviation all classes airline business excluding war','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_all_classes_airline_business_including_war','347','Aviation all classes airline business including war','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_all_classes_airline_business_war_only','348','Aviation all classes airline business war only','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_all_classes_general_aviation_business','349','Aviation all classes general aviation business','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_hull','350','Aviation hull','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_hull_including_war','351','Aviation hull - including war','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_hull_unspecified','352','Aviation hull - unspecified','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_hull_war','353','Aviation hull - war','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_hull_airline_business_excluding_war','354','Aviation hull airline business excluding war','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_hull_airline_business_including_war','355','Aviation hull airline business including war','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_hull_airline_business_war_only','356','Aviation hull airline business war only','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_hull_general_aviation_business_including_war','357','Aviation hull general aviation business - including war','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_hull_general_aviation_business_war_only','358','Aviation hull general aviation business - war only','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_hull_manufacturers_excluding_war','359','Aviation hull manufacturers - excluding war','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_hull_manufacturers_including_war','360','Aviation hull manufacturers - including war','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_hull_manufacturers_war_only','361','Aviation hull manufacturers - war only','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_liabilities_premises','362','Aviation liabilities - premises','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_liability','363','Aviation liability','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_other_liabilities','364','Aviation other liabilities','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_satellites','365','Aviation satellites','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_unspecified','366','Aviation unspecified','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_general','367','Aviation - general','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('liability_airline_airport','368','Liability airline airport','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('liability_airline_combined_single_limit','369','Liability airline combined single limit','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('liability_airline_passenger','370','Liability airline passenger','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('liability_airline_products','371','Liability airline products','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('liability_airline_third_party','372','Liability airline third party','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('liability_general_aviation_airport','373','Liability general aviation airport','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('liability_general_aviation_combined_single_limit','374','Liability general aviation combined single limit','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('liability_general_aviation_passenger','375','Liability general aviation passenger','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('liability_general_aviation_products','376','Liability general aviation products','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('liability_general_aviation_third_party','377','Liability general aviation third party','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('space_all_classes','378','Space - all classes','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('space_in_orbit','379','Space - in orbit','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('space_launch','380','Space - launch','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('space_launch_and_commissioning_period','381','Space - launch and commissioning period','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('space_liability','382','Space - liability','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('space_pre_launch','383','Space - pre launch','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('space_unspecified','384','Space unspecified','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_personal_accident_unspecified','385','Aviation - personal accident unspecified','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_cargo_including_war','520','Aviation cargo, including war','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_cargo_excluding_war','521','Aviation cargo, excluding war','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_products','548','Aviation Products','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_cargo','610','Aviation Cargo','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_hull_and_liability','611','Aviation Hull and Liability','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_hull_deductible','612','Aviation Hull Deductible','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_spares','613','Aviation Spares','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_hull_airline_business','624','Aviation Hull Airline Business','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('liability_airline','625','Liability Airline','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('aviation_hull_manufacturers','626','Aviation Hull Manufacturers','AVIATION')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('other_liability_environmental_impairment_liability','154','Other liability, environmental impairment liability','CASUALTY')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('environmental_or_pollution_liability','114','Environmental/pollution liability','CASUALTY')
INSERT INTO @COBList(LongCode,JVCode,[Description],PPL_REPORTING_CLASS) VALUES('general_cyber','633','General Cyber','FINPRO')

---------------------------------------------------------------------------------------------
SELECT DISTINCT VCLASBUS.Description [Class Of Business], CB.PPL_REPORTING_CLASS ,COUNT(CASE WHEN ', ' + tmp.RE_INSURER_STATUS +',' LIKE '%Bound%' THEN 1 END)  AS TotalCount
FROM
CORE.VW_CODE VCLASBUS 
INNER JOIN @COBList CB on VCLASBUS.[DESCRIPTION]=CB.Description
LEFT JOIN
(
	Select 
		DISTINCT PLACE.UMR AS 'UNIQUE_MARKET_REFERENCE',
		PLACDETAIL.ClassOfBusinessId,		
		(SELECT  CASE WHEN EXISTS ( SELECT 1 FROM [placement].PlacementAction PLACTION21 where PLACTION21.MarketId= MKT.MarketId and PLACTION21.ActionTypeId IN(2,6,7,8,34))
		THEN
		(SELECT TOP 1 
				CASE 
				WHEN PLACTION2.ActionTypeId = 2  and MKT.MarketStatusId = 28 then 'Bound' 
				WHEN PLACTION2.ActionTypeId = 6  and MKT.MarketStatusId = 28 then 'Bound' -- with Line Conditions
				WHEN PLACTION2.ActionTypeId = 7  and MKT.MarketStatusId = 28 then 'Bound'-- with Subjectivities
				WHEN PLACTION2.ActionTypeId = 8  and MKT.MarketStatusId = 28 then 'Bound'-- with Line Conditions and Subjectivities
				ELSE 
				CASE
				WHEN MKT.MarketStatusId = 24 OR MKT.MarketStatusId = 34 then 'Bound'-- Awaiting Broker Completion of Subjectivities
				WHEN PLACTION2.ActionTypeId = 34 and  MKT.MarketStatusId = 27 then 'Line Removed'     
				ELSE 
				MktStatus.MarketStatus
				END  
				END  AS 'RE_INSURER_STATUS'
			FROM [placement].PlacementAction PLACTION2 where PLACTION2.MarketId = MKT.MarketId and PLACTION2.ActionTypeId IN(2,6,7,8,34))		
		ELSE
			MktStatus.MarketStatus
		END ) AS 'RE_INSURER_STATUS'
		,CAST(SIGNED_DATE.SIGNED_LINE_DATE as DATE) as dt

	FROM [placement].Programme PROG WITH (NOLOCK)              
			JOIN [placement].Placement PLACE WITH (NOLOCK) ON PROG.ProgrammeId = PLACE.ProgrammeId      
			JOIN [placement].PlacementDetail PLACDETAIL WITH (NOLOCK) ON PLACE.PlacementId = PLACDETAIL.PlacementId      
			JOIN [placement].Section SEC  WITH (NOLOCK) ON PLACDETAIL.PLACEMENTDETAILID = SEC.PLACEMENTDETAILID        
			JOIN  [placement].Market MKT WITH (NOLOCK) ON MKT.SectionId = SEC.SectionId   
						
			LEFT JOIN lookup.PlacementStatus PLSTATUS ON PLSTATUS.PlacementStatusId = PLACDETAIL.PlacementStatusId     
			LEFT JOIN lookup.MarketStatus MktStatus ON MktStatus.MarketStatusId = MKT.MarketStatusId
					
			CROSS APPLY (SELECT max(PLACTION.SentTimestamp) SIGNED_LINE_DATE FROM [placement].PlacementAction PLACTION WITH (NOLOCK) 
              WHERE PLACTION.MarketId = MKT.MarketId and PLACTION.ACTIONTYPEID = 36) SIGNED_DATE

			WHERE (PLACE.OrganisationDisplayName NOT LIKE '%Post Bounce%' AND PLACE.OrganisationDisplayName NOT LIKE '%Test%') -- Removed Test Org
					AND PLSTATUS.PlacementStatus = 'Sign And Close Complete'  -- LAYER_STATUS = 'CLOSED'
					AND CAST(SIGNED_DATE.SIGNED_LINE_DATE as DATE) = CAST(@PullDate as DATE)
) tmp ON VCLASBUS.ID = tmp.ClassOfBusinessId      
GROUP BY VCLASBUS.Description,CB.PPL_REPORTING_CLASS
ORDER BY CB.PPL_REPORTING_CLASS, VCLASBUS.Description


--DROP table @COBList</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Generate Reports\COB_Report\OLE DB Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[10.40.13.52\LIVESUPP2C.Placing.dp_user]"
                      connectionManagerRefId="Package.ConnectionManagers[10.40.13.52\LIVESUPP2C.Placing.dp_user]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Output].Columns[TotalCount]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[TotalCount]"
                          lineageId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Output].Columns[TotalCount]"
                          name="TotalCount"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Output].Columns[Class Of Business]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Class Of Business]"
                          length="255"
                          lineageId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Output].Columns[Class Of Business]"
                          name="Class Of Business"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Output].Columns[PPL_REPORTING_CLASS]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[PPL_REPORTING_CLASS]"
                          length="100"
                          lineageId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Output].Columns[PPL_REPORTING_CLASS]"
                          name="PPL_REPORTING_CLASS"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[TotalCount]"
                          dataType="i4"
                          name="TotalCount" />
                        <externalMetadataColumn
                          refId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Class Of Business]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Class Of Business" />
                        <externalMetadataColumn
                          refId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[PPL_REPORTING_CLASS]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="PPL_REPORTING_CLASS" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Class Of Business]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Class Of Business]"
                          name="Class Of Business" />
                        <outputColumn
                          refId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[PPL_REPORTING_CLASS]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[PPL_REPORTING_CLASS]"
                          name="PPL_REPORTING_CLASS" />
                        <outputColumn
                          refId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[TotalCount]"
                          dataType="i4"
                          lineageId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[TotalCount]"
                          name="TotalCount" />
                        <outputColumn
                          refId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Generate Reports\COB_Report.Paths[Data Conversion Output]"
                  endId="Package\Generate Reports\COB_Report\Excel Destination.Inputs[Excel Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Generate Reports\COB_Report\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Generate Reports\COB_Report.Paths[OLE DB Source Output]"
                  endId="Package\Generate Reports\COB_Report\Data Conversion.Inputs[Data Conversion Input]"
                  name="OLE DB Source Output"
                  startId="Package\Generate Reports\COB_Report\OLE DB Source.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Send COB Mail"
      DTS:CreationName="Microsoft.SendMailTask"
      DTS:DelayValidation="True"
      DTS:Description="Send Mail Task"
      DTS:DTSID="{3710684b-4b9e-41c0-88ed-17e7c0231189}"
      DTS:ExecutableType="Microsoft.SendMailTask"
      DTS:LocaleID="-1"
      DTS:MaxErrorCount="2"
      DTS:ObjectName="Send COB Mail"
      DTS:TaskContact="Send Mail Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:PropertyExpression
        DTS:Name="FileAttachments">@[User::cob_target]  + ".7z"</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="FromLine">@[User::senderemail]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Subject">"Report " + @[User::cob_name]   + " has been attached"</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ToLine">@[User::recipientEmail]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <SendMailTask:SendMailTaskData
          SendMailTask:SMTPServer="{9DF14AA8-C632-414D-B575-3FE14CC1D245}"
          SendMailTask:From="swarndeep.singh@ebix.com"
          SendMailTask:To="tyler.atheis@Ebix.com;pplsupport@ebix.com;globalsql@ebix.com"
          SendMailTask:Subject="Report COB_COUNT_REPORT_20180820.xls has been attached" xmlns:SendMailTask="www.microsoft.com/sqlserver/dts/tasks/sendmailtask">
          <SendMailTask:Attachments
            SendMailTask:FileName="C:\install\COBREPORT\report\COB_COUNT_REPORT_20171130.xls.7z" />
        </SendMailTask:SendMailTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ZipFiles-7zip"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{0f746013-e23f-46db-b58f-776d7c86e2c9}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ZipFiles-7zip"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_5094035847a8481c826d5c78f3c6a9de"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::cob_target">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e7e8f1f1ea70431a9ef26de684c7331c.Properties.Settings.get_Default():ST_e7e8f1f1ea70431a9ef26de684c7331c.Properties.Sett" +
    "ings")]

namespace ST_e7e8f1f1ea70431a9ef26de684c7331c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_5094035847a8481c826d5c78f3c6a9de.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{129438E2-4504-4CE1-8CED-1162898CEB98}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_e7e8f1f1ea70431a9ef26de684c7331c</RootNamespace><AssemblyName>ST_5094035847a8481c826d5c78f3c6a9de</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.IO.Compression;

#endregion

namespace ST_e7e8f1f1ea70431a9ef26de684c7331c
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			// TODO: Add your code here
            compress(Dts.Variables["cob_target"].Value.ToString());
            //compress(Dts.Variables["uw_target"].Value.ToString());
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        public void compress(string path)
        {
            FileStream sourceFile = File.OpenRead(path);
            FileStream destFile = File.Create(path + ".7z");

            
            GZipStream GZipper = new GZipStream(destFile, CompressionMode.Compress);

            try
            {
                int theByte = sourceFile.ReadByte();
                while (theByte != -1)
                {
                    GZipper.WriteByte((byte)theByte);
                    theByte = sourceFile.ReadByte();

                }
            }
            finally
            {
                GZipper.Dispose();
            }

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_e7e8f1f1ea70431a9ef26de684c7331c</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_e7e8f1f1ea70431a9ef26de684c7331c</msb:DisplayName>
		<msb:ProjectId>{A526EAA2-1DA2-4805-8396-FC2BD287C37F}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_5094035847a8481c826d5c78f3c6a9de.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e7e8f1f1ea70431a9ef26de684c7331c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_e7e8f1f1ea70431a9ef26de684c7331c")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e7e8f1f1ea70431a9ef26de684c7331c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e7e8f1f1ea70431a9ef26de684c7331c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e7e8f1f1ea70431a9ef26de684c7331c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e7e8f1f1ea70431a9ef26de684c7331c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e7e8f1f1ea70431a9ef26de684c7331c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_5094035847a8481c826d5c78f3c6a9de.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJhlHFoAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAAji8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADwvAABPAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAlA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABw
LwAAAAAAAEgAAAACAAUAGCIAACQNAAABAAAAAAAAAGAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqygICKBYAAApvFwAACnJzAABwbxgAAApvGQAACm8aAAAKKAkAAAYCKBYA
AAoWbxsAAAoqAAAbMAIARgAAAAIAABEDKBwAAAoKA3KJAABwKB0AAAooHgAACgsHF3MfAAAKDAZv
IAAACg0rDwgJ0m8hAAAKBm8gAAAKDQkVM+3eBwhvIgAACtwqAAABEAAAAgAgAB4+AAcAAAAAHgIo
IwAACioAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVy
LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
a2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQC
AAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAA
ACAEAAAjfgAAjAQAAGwGAAAjU3RyaW5ncwAAAAD4CgAAlAAAACNVUwCMCwAAEAAAACNHVUlEAAAA
nAsAAIgBAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+iUzABYAAAEAAAAjAAAABQAAAAYAAAAK
AAAAAgAAACMAAAACAAAADwAAAAIAAAACAAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAAAKAAEA
AAAAAAYAwQC6AAoA3QDIAA4APQEUAQYAWQG6AAYAbwFeAQYAoAGLAQYAZQJLAgYAkAJ+AgYApwJ+
AgYAxAJ+AgYA4wJ+AgYA/AJ+AgYAFQN+AgYAMAN+AgYASwN+AgYAZAN+AgYAnQN9AwYAvQN9AwYA
EgT/AwYALwS6AAYANAS6AAYAWAR+AgoAhARuBAoAnQRuBAYAsgR9Aw4A1AQUAQ4A9gQUARIATwUv
BRIAZwUvBQYApQWbBQYAqgWbBQYAvgW6AAoA6QXTBQYA9AWbBQoA+wXTBQAAAAABAAAAAAABAAEA
AAAQADIAPAAFAAEAAQAAARAAawA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAARAAQACwAR
AH8BEwARAKwBFwARAPYBOQAGBigCTABWgDACTwBWgDgCTwBQIAAAAACDGLwBGwABAFggAAAAAJMI
wgEfAAEAkSAAAAAAkwjWASQAAQCYIAAAAACTCOIBKQABAKAgAAAAAJYIBgI9AAIAsyAAAAAAhhi8
ARsAAgCnIAAAAACRGM0EiQACALsgAAAAAIYAGgIbAAIA8CAAAAAAhgAfAkcAAgBUIQAAAACGGLwB
GwADAAAAAQBAAgAAAQBGAjkAvAFHAEEAvAFHAEkAvAFHAFEAvAFHAFkAvAFHAGEAvAFHAGkAvAFH
AHEAvAFHAHkAvAFHAIEAvAFHAIkAvAFdAJEAvAEbAJkAvAEbAAkAvAEbAKEARgRiAKEAYQRpACkA
vAFuALkAvAF6AMkAvAEbABEAvAEbANEAvAEbABkACAWNANkAWQWSAOEAcAWXAOkAeQWdAAkAgwWh
ANkAjAVdAPEAtQWlAAEBxQWrAPEAzAWlAAkBvAGxABEBCwa7ABEBFAa/ABEBHgYbABkAvAEbAAgA
FABTAAgAGABYACkAkwCAAC4AGwBAAS4AIwBAAS4AYwBmAS4ACwDPAC4AEwAXAS4AMwAXAS4AKwBA
AS4AOwBGAS4AQwBAAS4AWwBdAUMAawBYAEkAkwCAAGEAmwBYAIMAqwBYAHUAxAACAAEAAwADAAAA
bwEvAAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAAjBnkZAAAAAAA
ANsDAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAADAAAAAAAAAAAAAAA
CgD1AAAAAAAMAAAAAAAAAAAAAAAKABAFAAAAAAAAAAABAAAAJgYAAAUABAAAAAA8TW9kdWxlPgBT
VF81MDk0MDM1ODQ3YTg0ODFjODI2ZDVjNzhmM2M2YTlkZS5kbGwAUmVzb3VyY2VzAFNUX2U3ZThm
MWYxZWE3MDQzMWE5ZWYyNmRlNjg0YzczMzFjLlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFp
bgBTVF9lN2U4ZjFmMWVhNzA0MzFhOWVmMjZkZTY4NGM3MzMxYwBTY3JpcHRSZXN1bHRzAG1zY29y
bGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5n
c0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lz
dGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6
YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFn
ZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0Rl
ZmF1bHQARGVmYXVsdABNYWluAGNvbXByZXNzAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVl
AHBhdGgAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUA
U3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0
aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBh
bnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0
cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0
ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNl
cwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0
cmlidXRlAFNUXzUwOTQwMzU4NDdhODQ4MWM4MjZkNWM3OGYzYzZhOWRlAFN5c3RlbS5EaWFnbm9z
dGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUA
R2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRN
b2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGls
ZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJp
YnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdl
ZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFi
bGVzAFZhcmlhYmxlAGdldF9JdGVtAGdldF9WYWx1ZQBUb1N0cmluZwBzZXRfVGFza1Jlc3VsdABT
eXN0ZW0uSU8ARmlsZQBGaWxlU3RyZWFtAE9wZW5SZWFkAFN0cmluZwBDb25jYXQAQ3JlYXRlAFN5
c3RlbS5JTy5Db21wcmVzc2lvbgBHWmlwU3RyZWFtAFN0cmVhbQBDb21wcmVzc2lvbk1vZGUAUmVh
ZEJ5dGUAV3JpdGVCeXRlAERpc3Bvc2UAU1RfZTdlOGYxZjFlYTcwNDMxYTllZjI2ZGU2ODRjNzMz
MWMuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAABxUwBUAF8AZQA3AGUAOABmADEA
ZgAxAGUAYQA3ADAANAAzADEAYQA5AGUAZgAyADYAZABlADYAOAA0AGMANwAzADMAMQBjAC4AUABy
AG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAVYwBvAGIAXwB0AGEAcgBnAGUA
dAAABy4ANwB6AAAAAABj6SuFWBB/Q67Rg3lKh82QAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZ
AyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwEIAEBDgIGCAMGERQE
AAAAAAQBAAAABCABAQgGAAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAAB
BCAAEm0EIAAScQUgARJ1HAMgABwDIAAOBQABEn0OBQACDg4OCSACARKAiRGAjQMgAAgEIAEBBQoH
BBJ9En0SgIUIRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNw
bGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NUX2U3ZThmMWYxZWE3MDQzMWE5ZWYyNmRlNjg0
YzczMzFjAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTcAAAgBAAgAAAAAAB4BAAEAVAIWV3Jh
cE5vbkV4Y2VwdGlvblRocm93cwEAAABkLwAAAAAAAAAAAAB+LwAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAcC8AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQDkZIwZAAABAORkjBk/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AZQA3AGUAOABmADEAZgAxAGUAYQA3ADAANAAzADEAYQA5AGUAZgAyADYAZABlADYAOAA0AGMA
NwAzADMAMQBjAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYANQA0
ADAALgAyADUAOAAyADgAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
NQAwADkANAAwADMANQA4ADQANwBhADgANAA4ADEAYwA4ADIANgBkADUAYwA3ADgAZgAzAGMANgBh
ADkAZABlAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADcAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8ANQAwADkANAAwADMANQA4ADQANwBhADgANAA4ADEAYwA4ADIA
NgBkADUAYwA3ADgAZgAzAGMANgBhADkAZABlAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfAGUANwBlADgAZgAxAGYAMQBlAGEANwAwADQAMwAxAGEAOQBlAGYA
MgA2AGQAZQA2ADgANABjADcAMwAzADEAYwAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANgA1ADQAMAAuADIANQA4ADIAOAAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA1ADQAMAAuADIANQA4ADIAOAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAACQPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{2f5f3fca-fa21-4200-a031-5d0327c083a6}"
      DTS:From="Package\CopyFilesFromTemplate"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Generate Reports" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{97C2A736-7DF5-4678-B296-557F8822B165}"
      DTS:From="Package\DeleteFiles"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\CopyFilesFromTemplate" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{CEF39C20-C637-4C0C-8C23-962784B93F67}"
      DTS:From="Package\ZipFiles-7zip"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Send COB Mail" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{9fcb8101-1605-411f-9cf8-0d5ba00f6c94}"
      DTS:From="Package\Generate Reports"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\CopyFiles" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{84a9d6a3-9333-4a39-a5c1-dfaa035e279b}"
      DTS:From="Package\CopyFiles"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\ZipFiles-7zip" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{C78ADDBB-B65D-464F-A5B6-458AADBFB386}"
      DTS:From="Package\Foreach Loop Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\CopyFilesFromTemplate" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="125,42"
          Id="Package\CopyFiles"
          TopLeft="236,740" />
        <NodeLayout
          Size="193,42"
          Id="Package\CopyFilesFromTemplate"
          TopLeft="162,430" />
        <NodeLayout
          Size="132,42"
          Id="Package\DeleteFiles"
          TopLeft="756,377" />
        <NodeLayout
          Size="160,42"
          Id="Package\Foreach Loop Container\File System Task"
          TopLeft="9,4" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="246,52"
          Size="246,94"
          Id="Package\Foreach Loop Container"
          TopLeft="185,128" />
        <NodeLayout
          Size="138,42"
          Id="Package\Generate Reports\COB_Report"
          TopLeft="103.5,5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="366,102"
          Size="366,145"
          Id="Package\Generate Reports"
          TopLeft="95,569" />
        <NodeLayout
          Size="150,42"
          Id="Package\Send COB Mail"
          TopLeft="206,901" />
        <NodeLayout
          Size="139,42"
          Id="Package\ZipFiles-7zip"
          TopLeft="216,813" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="258.5,472">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="19.5,97"
              Start="0,0"
              End="19.5,89.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,44.5"
                    Point2="0,48.5"
                    Point3="4,48.5" />
                  <mssgle:LineSegment
                    End="15.5,48.5" />
                  <mssgle:CubicBezierSegment
                    Point1="15.5,48.5"
                    Point2="19.5,48.5"
                    Point3="19.5,52.5" />
                  <mssgle:LineSegment
                    End="19.5,89.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="756,398">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-401,53"
              Start="0,0"
              End="-393.5,53">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-196.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-196.5,0"
                    Point2="-200.5,0"
                    Point3="-200.5,4" />
                  <mssgle:LineSegment
                    End="-200.5,49" />
                  <mssgle:CubicBezierSegment
                    Point1="-200.5,49"
                    Point2="-200.5,53"
                    Point3="-204.5,53" />
                  <mssgle:LineSegment
                    End="-393.5,53" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="283.25,855">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46"
              Start="0,0"
              End="0,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="278,714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="20.5,26"
              Start="0,0"
              End="20.5,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9"
                    Point2="0,13"
                    Point3="4,13" />
                  <mssgle:LineSegment
                    End="16.5,13" />
                  <mssgle:CubicBezierSegment
                    Point1="16.5,13"
                    Point2="20.5,13"
                    Point3="20.5,17" />
                  <mssgle:LineSegment
                    End="20.5,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="298.5,782">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-13,31"
              Start="0,0"
              End="-13,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.5"
                    Point2="0,15.5"
                    Point3="-4,15.5" />
                  <mssgle:LineSegment
                    End="-9,15.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-9,15.5"
                    Point2="-13,15.5"
                    Point3="-13,19.5" />
                  <mssgle:LineSegment
                    End="-13,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="308,222">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-49.5,208"
              Start="0,0"
              End="-49.5,200.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,100" />
                  <mssgle:CubicBezierSegment
                    Point1="0,100"
                    Point2="0,104"
                    Point3="-4,104" />
                  <mssgle:LineSegment
                    End="-45.5,104" />
                  <mssgle:CubicBezierSegment
                    Point1="-45.5,104"
                    Point2="-49.5,104"
                    Point3="-49.5,108" />
                  <mssgle:LineSegment
                    End="-49.5,200.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Generate Reports\COB_Report">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="161,42"
          Id="Package\Generate Reports\COB_Report\Excel Destination"
          TopLeft="526,261" />
        <NodeLayout
          Size="152,42"
          Id="Package\Generate Reports\COB_Report\OLE DB Source"
          TopLeft="517,159" />
        <NodeLayout
          Size="158,42"
          Id="Package\Generate Reports\COB_Report\Data Conversion"
          TopLeft="761,206" />
        <EdgeLayout
          Id="Package\Generate Reports\COB_Report.Paths[OLE DB Source Output]"
          TopLeft="669,180">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="92,41.3333333333333"
              Start="0,0"
              End="84.5,41.3333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="49.1743119266055,0" />
                  <mssgle:CubicBezierSegment
                    Point1="49.1743119266055,0"
                    Point2="53.1743119266055,0"
                    Point3="53.1743119266055,4" />
                  <mssgle:LineSegment
                    End="53.1743119266055,37.3333333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="53.1743119266055,37.3333333333333"
                    Point2="53.1743119266055,41.3333333333333"
                    Point3="57.1743119266055,41.3333333333333" />
                  <mssgle:LineSegment
                    End="84.5,41.3333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Generate Reports\COB_Report.Paths[Data Conversion Output]"
          TopLeft="761,232.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-74,49.3333333333333"
              Start="0,0"
              End="-66.5,49.3333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-27.2293577981652,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-27.2293577981652,0"
                    Point2="-31.2293577981652,0"
                    Point3="-31.2293577981652,4" />
                  <mssgle:LineSegment
                    End="-31.2293577981652,45.3333333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="-31.2293577981652,45.3333333333333"
                    Point2="-31.2293577981652,49.3333333333333"
                    Point3="-35.2293577981652,49.3333333333333" />
                  <mssgle:LineSegment
                    End="-66.5,49.3333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Generate Reports\COB_Report\Excel Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Generate Reports\COB_Report\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>